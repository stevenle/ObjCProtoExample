// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: foo.proto

#import "GPBProtocolBuffers_RuntimeSupport.h"

#import "Foo.pbobjc.h"

#pragma mark - FooRoot

@implementation FooRoot

@end

static GPBFileDescriptor *FooRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Person

@implementation Person

@dynamic firstName;
@dynamic lastName;
@dynamic gender;

typedef struct Person_Storage {
  uint32_t _has_storage_[1];
  Person_Gender gender;
  NSString *firstName;
  NSString *lastName;
} Person_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "firstName",
        .number = Person_FieldNumber_FirstName,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(Person_Storage, firstName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "lastName",
        .number = Person_FieldNumber_LastName,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(Person_Storage, lastName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gender",
        .number = Person_FieldNumber_Gender,
        .hasIndex = 2,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .type = GPBTypeEnum,
        .offset = offsetof(Person_Storage, gender),
        .defaultValue.valueEnum = Person_Gender_Unknown,
        .typeSpecific.enumDescFunc = Person_Gender_EnumDescriptor,
        .fieldOptions = NULL,
      },
    };
    static GPBMessageEnumDescription enums[] = {
      { .enumDescriptorFunc = Person_Gender_EnumDescriptor },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[Person class]
                                              rootClass:[FooRoot class]
                                                   file:FooRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:enums
                                              enumCount:sizeof(enums) / sizeof(GPBMessageEnumDescription)
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(Person_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

int32_t Person_Gender_RawValue(Person *message) {
  GPBDescriptor *descriptor = [Person descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:Person_FieldNumber_Gender];
  return GPBGetInt32IvarWithField(message, field);
}

void SetPerson_Gender_RawValue(Person *message, int32_t value) {
  GPBDescriptor *descriptor = [Person descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:Person_FieldNumber_Gender];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - Enum Person_Gender

GPBEnumDescriptor *Person_Gender_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "Unknown", .number = Person_Gender_Unknown },
      { .name = "Female", .number = Person_Gender_Female },
      { .name = "Male", .number = Person_Gender_Male },
    };
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(Person_Gender)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:Person_Gender_IsValidValue];
  }
  return descriptor;
}

BOOL Person_Gender_IsValidValue(int32_t value__) {
  switch (value__) {
    case Person_Gender_Unknown:
    case Person_Gender_Female:
    case Person_Gender_Male:
      return YES;
    default:
      return NO;
  }
}

